// <auto-generated />
using System;
using Infrastructure.Repositories.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(HikerElementContext))]
    [Migration("20230810163502_adding_seed")]
    partial class adding_seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Hiker.Entities.Hiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HikerElements")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Hiker");
                });

            modelBuilder.Entity("Domain.HikerElement.Entities.HikerElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HikerElements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calories = 3,
                            LastModified = new DateTime(2023, 8, 10, 11, 35, 2, 531, DateTimeKind.Local).AddTicks(7462),
                            Name = "E1",
                            Weight = 5
                        },
                        new
                        {
                            Id = 2,
                            Calories = 5,
                            LastModified = new DateTime(2023, 8, 10, 11, 35, 2, 531, DateTimeKind.Local).AddTicks(7507),
                            Name = "E2",
                            Weight = 3
                        },
                        new
                        {
                            Id = 3,
                            Calories = 2,
                            LastModified = new DateTime(2023, 8, 10, 11, 35, 2, 531, DateTimeKind.Local).AddTicks(7523),
                            Name = "E3",
                            Weight = 5
                        },
                        new
                        {
                            Id = 4,
                            Calories = 8,
                            LastModified = new DateTime(2023, 8, 10, 11, 35, 2, 531, DateTimeKind.Local).AddTicks(7537),
                            Name = "E4",
                            Weight = 1
                        },
                        new
                        {
                            Id = 5,
                            Calories = 3,
                            LastModified = new DateTime(2023, 8, 10, 11, 35, 2, 531, DateTimeKind.Local).AddTicks(7552),
                            Name = "E5",
                            Weight = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
